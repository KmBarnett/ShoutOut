{"version":3,"sources":["Form/Form.js","Card/Card.js","Ideas/Ideas.js","APICalls.js","App/App.js","index.js"],"names":["Form","handleChange","e","setState","target","name","value","submitNewIdea","preventDefault","addIdea","props","state","id","Date","now","resetInputs","title","description","password","type","placeholder","this","onChange","onClick","Component","Card","removeIdea","className","Ideas","ideas","ideaCards","map","idea","key","length","APICall","a","fetch","then","res","json","catch","err","console","error","message","data","APIPost","options","method","headers","body","JSON","stringify","newIdea","APIDelete","App","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f856ef1f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Form.css'\n\nexport default class Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      description: '',\n      password:''\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value})\n  }\n\n  submitNewIdea = e => {\n    e.preventDefault();\n    const { addIdea } = this.props;\n    const newIdea = { ...this.state, id: Date.now()};\n    addIdea(newIdea);\n    this.resetInputs();\n  }\n\n  resetInputs = () => {\n    this.setState({\n      title: '',\n      description: '',\n      password: ''\n    })\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          type='text'\n          placeholder='Person'\n          value={this.state.title}\n          name='title'\n          onChange={this.handleChange}\n        />\n        <input\n          type='text'\n          placeholder='How They Are Awesome'\n          value={this.state.description}\n          name='description'\n          onChange={this.handleChange}\n        />\n        <input\n          type='text'\n          placeholder='password'\n          value={this.state.password}\n          name='password'\n          onChange={this.handleChange}\n        />\n        <button\n          onClick={this.submitNewIdea}\n        >\n          Shout!\n        </button>\n      </form>\n    )\n  }\n}\n","import React from 'react';\nimport './Card.css'\n\nconst Card = ({ id, title, description, removeIdea }) => {\n  return (\n    <section className='card'>\n      <h3>{ title }</h3>\n      <p>{ description }</p>\n      <button onClick={() => removeIdea(id)}>Delete</button>\n    </section>\n  )\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from '../Card/Card';\nimport './Ideas.css';\n\nconst Ideas = ({ ideas, removeIdea }) => {\nconst ideaCards = ideas.map(idea => {\n    return <Card\n      id={idea.id}\n      title={idea.title}\n      description={idea.description}\n      removeIdea={removeIdea}\n      key={idea.id}\n    />\n  })\n\n  return (\n    <>\n      <h2>Shout Outs</h2>\n      <section className='ideas'>\n        {!ideas.length ? (<h3>You Currntly Have Shout Outs</h3>) : ideaCards}\n      </section>\n    </>\n  )\n}\n\nexport default Ideas;\n","export const APICall = async () => {\n  const data = await fetch('https://shout-out-turing.herokuapp.com/api/v1/ideas')\n    .then(res => res.json())\n    .catch(err => console.error(err.message))\n  return data\n}\n\nexport const APIPost = async (idea) => {\n  let options = {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({...idea})\n  }\n  const newIdea = await fetch('https://shout-out-turing.herokuapp.com/api/v1/ideas', options)\n  .then(res => res.json())\n  .catch(err => console.error(err.message))\n  return newIdea\n}\n\nexport const APIDelete = async (id) => {\n  let options = {\n    method: 'DELETE',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n  }\n  const newIdea = await fetch(`https://shout-out-turing.herokuapp.com/api/v1/ideas/${id}`, options)\n  .then(res => res.json())\n  .catch(err => console.error(err.message))\n}\n","import React, { Component } from 'react';\nimport Form from '../Form/Form';\nimport Ideas from '../Ideas/Ideas'\nimport './App.css';\nimport { APICall, APIPost, APIDelete } from '../APICalls.js'\n\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ideas: []\n    };\n  }\n\n  async componentDidMount() {\n    const { ideas } = this.state\n    const data = await APICall()\n    this.setState({ideas: [...ideas, ...data]})\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value})\n  }\n\n  addIdea = async newIdea => {\n    const idea = await APIPost(newIdea)\n    this.setState({ ideas: [...this.state.ideas, idea]})\n  }\n\n  removeIdea = (id) => {\n    const ideas = this.state.ideas.filter(idea => idea.id !== id);\n    APIDelete(id)\n    this.setState({ ideas });\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <h1>Shout Outs</h1>\n        <Form addIdea={this.addIdea} />\n        <Ideas\n          ideas={this.state.ideas}\n          removeIdea={ this.removeIdea}\n        />\n      </main>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}